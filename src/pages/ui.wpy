<template>
  <view>
    Layout 栅格布局
    <i-row>
        <i-col span="8" i-class="col-class">col-8</i-col>
        <i-col span="8" i-class="col-class">col-8</i-col>
        <i-col span="8" i-class="col-class">col-8</i-col>
    </i-row>
  </view>

  <view>
      Grid 宫格
      <i-grid>
          <i-grid-item>
              <i-grid-icon>
                  <image src="/assets/icon_home.png" />
              </i-grid-icon>
              <i-grid-label>Grid</i-grid-label>
          </i-grid-item>
          <i-grid-item>Grid</i-grid-item>
          <i-grid-item>Grid</i-grid-item>
      </i-grid>
  </view>

  <view>
      Panel 面板
      <i-panel title="标题">
          <view style="padding: 15px;">PANEL 内容区域</view>
      </i-panel>
  </view>

  <view>
      List 列表
      <i-cell-group>
          <i-cell title="只显示箭头" is-link></i-cell>
          <i-cell title="跳转到首页" is-link url="/pages/index/index"></i-cell>
          <i-cell title="只有 footer 点击有效" is-link url="/pages/index/index" only-tap-footer></i-cell>
          <i-cell title="开关">
              <switch slot="footer" checked></switch>
          </i-cell>
      </i-cell-group>
  </view>

  <view>
      Card 卡片
      <i-card title="卡片标题" extra="额外内容" thumb="https://i.loli.net/2017/08/21/599a521472424.jpg">
          <view slot="content">内容不错</view>
          <view slot="footer">尾部内容</view>
      </i-card>
  </view>

  <view>
      Button 按钮
      <i-button type="primary" bind:click="handleClick">这是一个按钮</i-button>
      <i-button type="success" size="small" shape="circle" bind:click="handleClick">默认尺寸</i-button>
  </view>

  <view>
      Icon 图标
      <i-icon type="activity" size="28"/>
      <i-icon type="group" color="#00B26A"/>
      <i-icon type="clock" />
  </view>

  <view>
      TabBar 面板
      <i-tab-bar current="{{ current }}" bindchange="handleChange">
          <i-tab-bar-item key="homepage" icon="homepage" current-icon="homepage_fill" title="Home"></i-tab-bar-item>
          <i-tab-bar-item key="group" icon="group" current-icon="group_fill" title="Friends"></i-tab-bar-item>
          <i-tab-bar-item key="remind" icon="remind" current-icon="remind_fill" count="3" title="Notice"></i-tab-bar-item>
          <i-tab-bar-item key="mine" icon="mine" current-icon="mine_fill" dot title="My"></i-tab-bar-item>
      </i-tab-bar>
  </view>

  <view>
      Tabs 标签页
      <i-tabs current="{{ current2 }}" bindchange="handleChange2">
          <i-tab key="homepage" title="选项1"></i-tab>
          <i-tab key="group" title="选项2"></i-tab>
          <i-tab key="remind" title="选项3"></i-tab>
      </i-tabs>
  </view>

  <view>
      Drawer 抽屉
      <i-button bind:click="toggleLeft1" type="ghost">左边弹出1</i-button>
      <i-drawer mode="left" visible="{{showLeft1}}" bind:close="toggleLeft1">
          <view class="demo-container">
              单击遮罩层关闭
          </view>
      </i-drawer>
  </view>

  <view>
      Page 分页
      <i-page current="{{ current3 }}" total="5" bind:change="handleChange3">
          <view slot="prev">Prev</view>
          <view slot="next">Next</view>
      </i-page>
  </view>

  <view>
      Steps 步骤条
      <i-steps>
          <i-step status="finish">
              <view slot="title">
                    已完成
              </view>
              <view slot="content">
                  这里是该步骤的描述信息
              </view>
          </i-step>
          <i-step status="process">
              <view slot="title">
                  进行中
              </view>
              <view slot="content">
                  这里是该步骤的描述信息
              </view>
          </i-step>
          <i-step status="">
              <view slot="title">
                  错误
              </view>
              <view slot="content">
                  这里是该步骤的描述信息
              </view>
          </i-step>
      </i-steps>
  </view>

  <view>
      NoticeBar 通告栏
      <i-notice-bar>2018年世界杯,将于6月14日至7月15日举行</i-notice-bar>
  </view>

  <view>
      ActionSheet 动作面板
      <i-button type="ghost" bind:click="handleOpen1">一般用法</i-button>
      <i-action-sheet visible="{{ visible1 }}" actions="{{ actions1 }}" show-cancel bind:cancel="handleCancel1" bind:click="handleClickItem1" />
  </view>

  <i-button type="ghost" bind:click="handleText">只显示文本</i-button>
  <i-toast id="toast" />

  <i-button bind:click="handleOpen2">普通对话框</i-button>
  <i-modal title="标题" visible="{{ visible2 }}" bind:ok="handleCancel2" bind:cancel="handleCancel2">
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
      <view>一些文本</view>
  </i-modal>

  <view>
      Badge 徽标数
      <i-badge dot>
          <view class="demo-badge"></view>
      </i-badge>
  </view>


  <view>
      Alert 警告提示
      <i-alert>An info prompt</i-alert>
  </view>

  <view>
      Tag 标签
      <i-tag>标签一</i-tag>
  </view>

  <view>
      Progress 进度条
      <i-progress percent="45" status="active"></i-progress>
  </view>

  <view>
      Avatar 头像
      <i-avatar src="https://i.loli.net/2017/08/21/599a521472424.jpg" size="default"></i-avatar>
  </view>

  <view class="view-wrap">
      <text class="type-title">CountDown 倒计时：</text>
      <i-count-down target="{{targetTime}}" clear-timer="{{clearTimer}}"></i-count-down>
  </view>

  <view>
      Divider 分隔符
      <i-divider color="#2d8cf0" lineColor="#2d8cf0">加载已经完成,没有其他数据</i-divider>
  </view>

  <view>
      LoadMore 页底提示
      <i-load-more />
  </view>

  <view>
      Input 输入框
      <i-input value="{{ value2 }}" title="收货人" placeholder="名字" />
  </view>

  <view>
      Radio 单选
      <i-radio-group current="{{currentGroup}}" bindchange="handleFruitChange">
          <i-radio wx:for="{{fruit}}" wx:key="{{item.id}}" value="{{item.name}}"></i-radio>
      </i-radio-group>
  </view>

  <view>
      Checkbox 复选
      <i-checkbox-group current="{{currentGroup2}}" bindchange="handleFruitChange2">
          <i-checkbox wx:for="{{fruit2}}" wx:key="{{item.id}}" value="{{item.name}}"></i-checkbox>
      </i-checkbox-group>
  </view>

  <view>
      Switch 开关
      <i-switch value="{{switch1}}" bind:change="onChange"></i-switch>
  </view>

  <view>
      Rate 评分
      <i-rate bind:change="onChange1" value="{{starIndex1}}"></i-rate>
  </view>

  <view>
      InputNumber 数字输入框
      <i-input-number value="{{ value4 }}" min="0" max="100" bindchange="handleChange4" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test',
      usingComponents: {
        'i-row': '/iview/row/index',
        'i-col': '/iview/col/index',
        'i-grid': '/iview/grid/index',
        'i-grid-item': '/iview/grid-item/index',
        'i-grid-icon': '/iview/grid-icon/index',
        'i-grid-label': '/iview/grid-label/index',
        'i-panel': '/iview/panel/index',
        'i-cell-group': '/iview/cell-group/index',
        'i-cell': '/iview/cell/index',
        'i-card': '/iview/card/index',
        'i-button': '/iview/button/index',
        'i-icon': '/iview/icon/index',
        'i-tab-bar': '/iview/tab-bar/index',
        'i-tab-bar-item': '/iview/tab-bar-item/index',
        'i-tabs': '/iview/tabs/index',
        'i-tab': '/iview/tab/index',
        'i-drawer': '/iview/drawer/index',
        'i-page': '/iview/page/index',
        'i-steps': '/iview/steps/index',
        'i-step': '/iview/step/index',
        'i-notice-bar': '/iview/notice-bar/index',
        'i-index': '/iview/index/index',
        'i-index-item': '/iview/index-item/index',
        'i-sticky': '/iview/sticky/index',
        'i-sticky-item': '/iview/sticky-item/index',
        'i-action-sheet': '/iview/action-sheet/index',
        'i-toast': '/iview/toast/index',
        'i-modal': '/iview/modal/index',
        'i-message': '/iview/message/index',
        'i-spin': '/iview/spin/index',
        'i-swipeout': '/iview/swipeout/index',
        'i-badge': '/iview/badge/index',
        'i-alert': '/iview/alert/index',
        'i-tag': '/iview/tag/index',
        'i-progress': '/iview/progress/index',
        'i-avatar': '/iview/avatar/index',
        'i-collapse': '/iview/collapse/index',
        'i-collapse-item': '/iview/collapse-item/index',
        'i-count-down': '/iview/count-down/index',
        'i-divider': '/iview/divider/index',
        'i-load-more': '/iview/load-more/index',
        'i-input': '/iview/input/index',
        'i-radio-group': '/iview/radio-group/index',
        'i-radio': '/iview/radio/index',
        'i-checkbox-group': '/iview/checkbox-group/index',
        'i-checkbox': '/iview/checkbox/index',
        'i-switch': '/iview/switch/index',
        'i-rate': '/iview/rate/index',
        'i-input-number': '/iview/input-number/index'
      }
    }

    data = {
      current: 'homepage',
      current2: 'homepage',
      current3: 1,
      showLeft1: false,
      visible1: false,
      actions1: [
        {
          name: '选项1'
        },
        {
          name: '选项2'
        },
        {
          name: '去分享',
          icon: 'share',
          openType: 'share'
        }
      ],
      visible2: false,
      targetTime: new Date().getTime() + 6430000,
      clearTimer: false,
      value2: '',
      currentGroup: '苹果',
      fruit: [
        {
          id: 1,
          name: '香蕉'
        },
        {
          id: 2,
          name: '苹果'
        },
        {
          id: 3,
          name: '西瓜'
        },
        {
          id: 4,
          name: '葡萄'
        }
      ],
      currentGroup2: ['苹果'],
      fruit2: [
        {
          id: 1,
          name: '香蕉'
        },
        {
          id: 2,
          name: '苹果'
        },
        {
          id: 3,
          name: '西瓜'
        },
        {
          id: 4,
          name: '葡萄'
        }
      ],
      switch1: false,
      starIndex1: 1,
      value4: 10
    }

    computed = {

    }

    handleChange ({ detail }) {
      console.log(detail)
      this.setData({
        current: detail.key
      })
    }

    methods = {
      handleClick (e) {
        console.log(e)
      },
      handleChange ({ detail }) {
        console.log(detail)
        this.setData({
          current: detail.key
        })
      },
      handleChange2 ({ detail }) {
        this.setData({
          current2: detail.key
        })
      },
      toggleLeft1 () {
        this.setData({
          showLeft1: !this.data.showLeft1
        })
      },
      handleChange3 ({ detail }) {
        const type = detail.type
        if (type === 'next') {
          this.setData({
            current3: this.data.current3 + 1
          })
        } else if (type === 'prev') {
          this.setData({
            current3: this.data.current3 - 1
          })
        }
      },
      handleOpen1 () {
        this.setData({
          visible1: true
        })
      },
      handleCancel1 () {
        this.setData({
          visible1: false
        })
      },
      handleClickItem1 ({ detail }) {
        const index = detail.index + 1
        console.log(index)
      },
      handleText () {

      },
      handleOpen2 () {
        this.setData({
          visible2: true
        })
      },
      handleCancel2 () {
        this.setData({
          visible2: false
        })
      },
      handleFruitChange ({ detail = {} }) {
        console.log(detail)
        // this.setData({
        //     'currentGroup': detail.value
        // })
        this.currentGroup = detail.value
        this.$apply()
      },
      handleFruitChange2 ({ detail = {} }) {
        console.log(detail)
        const index = this.data.currentGroup2.indexOf(detail.value)
        index === -1 ? this.data.currentGroup2.push(detail.value) : this.data.currentGroup2.splice(index, 1)
        this.setData({
          'currentGroup2': this.data.currentGroup2
        })
      },
      onChange (e) {
        const detail = e.detail
        this.setData({
          'switch1': detail.value
        })
      },
      onChange1 (e) {
        const index = e.detail.index
        this.setData({
          'starIndex1': index
        })
      },
      handleChange4 ({ detail }) {
        this.setData({
          'value4': detail.value
        })
      }
    }

    events = {

    }

    onLoad() {

    }
  }
</script>
<style lang="less">

</style>
